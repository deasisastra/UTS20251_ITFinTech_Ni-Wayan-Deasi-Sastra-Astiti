import dbConnect from "../../../util/dbConnect";
import Otp from "../../../models/Otp";
import User from "../../../models/User";
import axios from 'axios';

const handler = async (req, res) => {
  if (req.method !== "POST") {
    return res.status(405).json({ message: "Method not allowed" });
  }

  try {
    const { phoneNumber } = req.body;
    console.log("Received phone number:", phoneNumber);

    if (!phoneNumber) {
      return res.status(400).json({ message: "Phone number is required" });
    }

    // Connect to database
    await dbConnect();
    
    // Generate OTP code
    const code = Math.floor(100000 + Math.random() * 900000).toString();
    console.log("Generated OTP:", code);
    
    // Save OTP to database
    await Otp.create({ phoneNumber, code });

    // Format phone number for FONNTE (remove + and spaces)
    const formattedPhone = phoneNumber.replace(/[+\s]/g, '');
    console.log("Formatted phone:", formattedPhone);
    
    if (!process.env.FONNTE_API_KEY) {
      console.log("FONNTE_API_KEY not found in environment variables");
      // For development, just log the OTP
      console.log(`Development mode - OTP for ${phoneNumber}: ${code}`);
      return res.status(200).json({ message: "OTP generated (dev mode)" });
    }

    // Simple message for testing
    const message = `Your OTP code is: ${code}`;
    console.log('Attempting to send WhatsApp message...');

    // Make the API call to FONNTE
    const response = await axios.post('https://api.fonnte.com/send', {
      target: formattedPhone,
      message: message
    }, {
      headers: {
        'Authorization': process.env.FONNTE_API_KEY
      }
    });

    console.log('FONNTE API Response:', response.data);

    // Check response status
    if (!response.data || response.data.status !== true) {
      console.error('FONNTE API Error:', response.data);
      return res.status(500).json({ message: "Failed to send OTP" });
    }

    return res.status(200).json({ message: "OTP sent successfully" });

  } catch (err) {
    console.error('Error in OTP send:', err);
    return res.status(500).json({ 
      message: "Failed to send OTP",
      error: err.message 
    });
  }
};

export default handler;